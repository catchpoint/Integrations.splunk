<endpoint name="data/inputs/app_catchpoint">
	<header>Catchpoint</header>
	<breadcrumb>
    	<parent hidecurrent="False">datainputstats</parent>
    	<name>Catchpoint Modular Input</name>
  </breadcrumb>
  <elements>
  	<element name="sourceFields" type="fieldset">
  		<view name="list" />
		<view name="edit" />
		<view name="create" />
		<key name="helpText">Stream specified test metrics into Splunk from Catchpoint.
		</key>
		<elements>
			<element name="name" type="textfield" label="Catchpoint Input Name">
				<view name="create" />
				<view name="list" />
				<key name="exampleText">Unique Name for your Modular Input </key>
			</element>

      	<element name="client_identifier" type="textfield" label="Client Secret">
				<view name="create" />
				<view name="list" />
        <key name="exampleText">  <![CDATA[<br /><br />
          Catchpoint secret key is taken from <a href='https://portal.catchpoint.com/ui/Content/Administration/ApiDetail.aspx' target='_blank'> portal.catchpoint.com</a> under REST API module.
        ]]>
				</key>
			</element>

      <!-- new. -->
      <element label="Data Retrieval" name="data_retrieval" type="select" class="spl-mgr-advanced-switch">
          <view name="edit"/>
          <view name="create"/>
          <view name="list"/>

          <options>
              <opt value="alerts" label="Alerts"/>
              <opt value="performance" label="Performance"/>

          </options>
          <onChange>
              <key name="_action">showonly</key>
              <key name="alerts">NONE</key>
              <key name="performance">ALL</key>
              <group_set>
                  <group name="test_id"/>
              </group_set>

          </onChange>
          <key name="exampleText">Define the data type being ingested into Splunk from the Catchpoint Pull API

          <![CDATA[<script>
      
          $(function(){
          var test_name_div = $("#item-name");
          var test_id_text = $("#test_id_id");
          test_name_div.append("<div class=\"endpoint\"><label for=\"endpoint_preview\"><br> Endpoint Preview: </label> <p class=\"exampleText\" id=\"endpoint_preview\"></p></div>");
          var endpoint_preview_div = $("#endpoint_preview");
          var endpoint_preview_primary = "https://io.catchpoint.com/ui/api/v{version}/alerts"
          endpoint_preview_div.text(endpoint_preview_primary);
          $( "#data_retrieval_id" ).click(function() {
              var data_id_text = $("#data_retrieval_id");
              var endpoint_preview_base = (data_id_text.val() === "performance")? "https://io.catchpoint.com/ui/api/v{version}/performance/raw?tests=" : "https://io.catchpoint.com/ui/api/v{version}/alerts"
             
              if(data_id_text.val() === "performance"){
                    endpoint_preview = endpoint_preview_base + test_id_text.val();
                    endpoint_preview_div.text(endpoint_preview);
                    test_id_text.keyup(function(){
                      endpoint_preview = endpoint_preview_base + test_id_text.val();
                      console.log(endpoint_preview);
                      endpoint_preview_div.text(endpoint_preview);
                });
              }
              else{
                  endpoint_preview_div.text(endpoint_preview_base)
              }
          console.log("Alerts selector value " + data_id_text.val()) });
          $(document).ready(function(){
                  console.log("Document is ready");
              });
          });
          </script>]]>

          </key>
      </element>
      <!--  end. -->
		  	<element name="test_id" type="textfield" label="Test ID">
		  		<view name="edit" />
				<view name="create" />
		  		<view name="list" />
				<key name="exampleText">  <![CDATA[<br /><br />
          <b>Note : Test ids needs to be of same test type. Create multiple Data Input objects for different test types.</b><br /><br />
          Catchpoint Test ids are taken from <a href='https://portal.catchpoint.com/ui/Content/ControlCenter/Synthetic' target='_blank'> portal.catchpoint.com</a>. Multiple ids should be separated by commas, for example: aaa,bbb,ccc
        ]]>
				</key>
		  	</element>
		</elements>
  	</element>
  	<element name="spl-ctrl_EnableAdvanced" type="checkbox" label="More settings" class="spl-mgr-advanced-switch">
        <view name="edit"/>
        <view name="create"/>
          <onChange>
              <key name="_action">showonly</key>
              <key name="0">NONE</key>
              <key name="1">ALL</key>
              <group_set>
                <group name="advanced"/>
              </group_set>
          </onChange>
    </element>
	<element name="advanced" type="fieldset" class="spl-mgr-advanced-options">
		<view name="list"/>
        <view name="edit"/>
        <view name="create"/>
        <elements>

		    <element name="indexField" type="fieldset">
		      <key name="legend">Index</key>
		      <key name="helpText">Set the destination index for this source.
              </key>
			  <view name="list"/>
		      <view name="edit"/>
		      <view name="create"/>
		      <elements>
		        <element name="index" type="select" label="Index">
		          <view name="list"/>
		          <view name="edit"/>
		          <view name="create"/>
		          <key name="dynamicOptions" type="dict">
		            <key name="keyName">title</key>
		            <key name="keyValue">title</key>
		            <key name="splunkSource">/data/indexes</key>
		            <key name="splunkSourceParams" type="dict">
		              <key name="search">'isInternal=false disabled=false'</key>
		              <key name="count">-1</key>
		            </key>
		          </key>
		        </element>
		      </elements>
		    </element>

		    <element name="hostFields" type="fieldset">
		      <key name="legend">Host</key>
		      <view name="edit"/>
		      <view name="create"/>
		      <elements>
		        <element name="host" type="textfield" label="Host field value">
		          <view name="edit"/>
		          <view name="create"/>
		        </element>
		      </elements>
		    </element>

        <element name="sourcetypeFields" type="fieldset">
          <view name="list"/>
          <view name="edit"/>
          <view name="create"/>
          <key name="helpText">
              Event extraction relies on the default value of
          sourcetype. If you change the default sourcetype value, you will
          need to update props.conf as well.
          </key>
          <elements>
            <element name="spl-ctrl_sourcetypeSelect" type="select" label="Set the source type">
              <onChange>
                <!-- <key name="auto">NONE</key> -->
                <key name="_action">showonly</key>
                <group_set>
                  <group name="sourcetype"/>
                  <group name="spl-ctrl_from_list"/>
                </group_set>
                <key name="sourcetype">sourcetype</key>
                <key name="spl-ctrl_from_list">spl-ctrl_from_list</key>
              </onChange>
              <options>
                <!-- <opt value="auto" label="Automatic"/> -->
                <opt value="spl-ctrl_from_list" label="From list"/>
                <opt value="sourcetype" label="Manual"/>
              </options>
              <view name="edit"/>
              <view name="create"/>
              <!-- <key name="exampleText">Set to automatic and Splunk will classify and assign sourcetype automatically. Unknown sourcetypes will be given a placeholder name.</key> -->
              <key name="processValueEdit">[[ e for e in ['sourcetype'] if form_defaults.get(e) ][0]]</key>
              <key name="processValueAdd">[[ e for e in ['sourcetype'] if form_defaults.get(e) ][0]]</key>
            </element>
            <element name="sourcetype" type="textfield" label="Source type">
              <view name="list"/>
              <view name="edit"/>
              <view name="create"/>
              <key name="exampleText">If this field is left blank, the default value of app_catchpoint will be used for the source type.</key>
              <!-- -->
              <key name="processValueList">_('app_catchpoint') if (value==None or value=='') else value</key>
              <key name="submitValueAdd">form_data.get('spl-ctrl_from_list') if form_data.get('spl-ctrl_sourcetypeSelect')=='spl-ctrl_from_list' else value if (value!=None and value.strip()!='') else 'app_catchpoint'</key>
              <key name="submitValueEdit">form_data.get('spl-ctrl_from_list') if form_data.get('spl-ctrl_sourcetypeSelect')=='spl-ctrl_from_list' else value if (value!=None and value.strip()!='') else 'app_catchpoint'</key>
              <key name="labelList">Source type</key>
            </element>
            <element name="spl-ctrl_from_list" type="select" label="Select source type from list">
              <view name="edit"/>
              <view name="create"/>
              <key name="exampleText">Splunk classifies all common data types automatically, but if you're looking for something specific, you can find more source types in the <![CDATA[<a href="../../../apps/remote">Splunkbase apps browser</a>]]> or online at <![CDATA[<a href="http://www.splunkbase.com/" target="_blank">www.splunkbase.com</a>]]>.</key>
              <!-- <key name="requiredIfVisible" /> -->
              <key name="dynamicOptions" type="dict">
                <key name="keyName">title</key>
                <key name="keyValue">title</key>
                <key name="splunkSource">/saved/sourcetypes</key>
                <key name="splunkSourceParams" type="dict">
                  <key name="count">-1</key>
                  <key name="search">'pulldown_type=true'</key>
                </key>
                <key name="prefixOptions" type="list">
                    <item type="list">
                        <item></item>
                        <item>Choose...</item>
                    </item>
                </key>
              </key>
            </element>
          </elements>
          <key name="legend">Source type</key>
        </element>

		</elements>
	</element>

	<element name="eai:acl.app" label="App">
      <view name="list"/>
      <key name="processValueList">entity['eai:acl']['app'] or ""</key>
    </element>
  </elements>
</endpoint>
